name: Build, Test, Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: your-username/qr-app   # Remplace "your-username" par ton identifiant Docker Hub
  KUBE_NAMESPACE: default

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Start Docker containers
        run: docker compose up -d --build

      - name: Wait for MySQL
        run: |
          echo "⏳ Waiting for MySQL..."
          for i in {1..30}; do
            if docker exec $(docker ps -qf "name=db") mysqladmin ping -h localhost -u qr_user -pqr_password --silent; then
              echo "✅ MySQL OK"
              break
            fi
            sleep 2
          done

      - name: Wait for API
        run: |
          echo "⏳ Waiting for API..."
          for i in {1..30}; do
            if curl --silent --fail http://localhost:5000; then
              echo "✅ API OK"
              break
            fi
            sleep 2
          done

      - name: Install Python dependencies
        run: pip install requests pyzbar cryptography pillow

      - name: Run integration tests
        run: python tests/integration/test_ouali.py

      - name: Cleanup
        run: docker compose down

  deploy-to-kubernetes:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          sed -i "s|image:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|" k8s/deployment.yaml
          kubectl apply -f k8s/ -n ${{ env.KUBE_NAMESPACE }}
